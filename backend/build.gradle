plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.study'
version = '0.0.1-SNAPSHOT'

ext {
	set('springAiVersion', '1.0.0-M5')
}

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

// no BOM needed when using explicit version on starters

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-devtools'
	
	// Dotenv (.env 자동 로딩)
	implementation 'me.paulschwarz:spring-dotenv:4.0.0'
	
	// Security & OAuth2
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	// WebSocket 메시지 보안 DSL (simpDestMatchers 등)
	implementation 'org.springframework.security:spring-security-messaging'
	
	// WebSocket
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	
	// Spring AI (Google AI via OpenAI compatible API)
	implementation("org.springframework.ai:spring-ai-openai-spring-boot-starter:${springAiVersion}") {
		// Swagger 구버전/중복 충돌 방지를 위해 spring-ai에서 끌고오는 Swagger 관련 의존성 제외
		exclude group: 'io.swagger.core.v3', module: 'swagger-annotations'
		exclude group: 'io.swagger', module: 'swagger-annotations'
		exclude group: 'io.swagger', module: 'swagger-models'
		exclude group: 'com.github.victools', module: 'jsonschema-module-swagger-2'
	}

	// Spring Boot 3용 OpenAPI UI 
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
	
	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'
	
	// QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api:3.1.0'
	
	runtimeOnly 'com.h2database:h2'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

// 개발 환경 설정
bootRun {
	args = ['--spring.profiles.active=dev']
}
